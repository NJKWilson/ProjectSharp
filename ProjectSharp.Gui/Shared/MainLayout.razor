@using AuthenticationState = ProjectSharp.Gui.Features.Auth.AuthenticationState
@inherits LayoutComponentBase

@inject AuthenticationState _authenticationState
@inject NavigationManager _navigationManager
@inject ThemeState _themeState

<PageTitle>ProjectSharp.Gui</PageTitle>

<MudThemeProvider Theme="_themeState.CurrentTheme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>



<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(DrawerToggle)" />
        <MudText Typo="Typo.h5" Class="ml-3">Project Sharp</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" Edge="Edge.End" OnClick="@(() => _themeState.ToggleTheme())" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Variant="@DrawerVariant.Persistent">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>


@code
{
    bool _drawerOpen = true;
    
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _authenticationState.OnChange += CheckAuth;
        CheckAuth();
    }

    public void Dispose()
    {
        _authenticationState.OnChange -= CheckAuth;
    }

    private void CheckAuth()
    {
        if (!_authenticationState.IsAuthenticated)
        {
            _navigationManager.NavigateTo("login");
        }
    }
}