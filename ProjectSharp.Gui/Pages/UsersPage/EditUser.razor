@using ProjectSharp.Gui.Database.Entities.Users

@inject UsersPageState _usersPageState

@implements IDisposable

<MudDrawer @bind-Open="@_usersPageState.EditUserFlyoutOpen" Anchor="@Anchor.End" Width="25%" Elevation="1" Variant="@DrawerVariant.Temporary">
    <EditForm Model="@_usersPageState.EditUserModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator/>
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Edit User</MudText>
        </MudDrawerHeader>
        <MudGrid Class="px-4">
            <MudItem xs="12">
                <MudTextField @bind-Value="_usersPageState.EditUserModel.FirstName" For="@(() => _usersPageState.EditUserModel.FirstName)" Label="First Name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="_usersPageState.EditUserModel.LastName" For="@(() => _usersPageState.EditUserModel.LastName)" Label="Last Name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="_usersPageState.EditUserModel.Email" For="@(() => _usersPageState.EditUserModel.Email)" Label="Email" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="_usersPageState.EditUserModel.JobTitle" For="@(() => _usersPageState.EditUserModel.JobTitle)" Label="Job Title" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
            <MudItem xs="12">
                <MudSelect Label="Select Role" @bind-Value="_usersPageState.EditUserModel.Role" Variant="Variant.Outlined" Margin="Margin.Dense">
                    @foreach (var item in _roleOptions)
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
        </MudGrid>
        <MudGrid Justify="Justify.FlexEnd" Class="px-2">
            <MudItem>
                <MudButton OnClick="_usersPageState.CloseEditUserFlyout">Cancel</MudButton>
                <MudButton ButtonType="ButtonType.Submit">Save</MudButton>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudDrawer>


@code {
    IEnumerable<string> _roleOptions = Enum.GetNames(typeof(UserRole)).ToList();

    private async Task OnValidSubmit(EditContext context)
    {
        // todo update user feature
    }
    
    protected override void OnInitialized()
    {
        _usersPageState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _usersPageState.OnChange -= StateHasChanged;
    }

}