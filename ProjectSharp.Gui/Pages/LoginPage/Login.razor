@page "/login"
@using ProjectSharp.Gui.Features.Auth.Login
@using AuthenticationState = ProjectSharp.Gui.Features.Auth.AuthenticationState
@layout LoginLayout

@inject ILoginAuthFeature _loginAuthFeature;
@inject AuthenticationState _authenticationState
@inject NavigationManager _navigationManager



@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations


<MudContainer Style="height:100vh;" Class="d-flex justify-center align-center">
    <MudGrid Justify="Justify.Center">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator/>
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Email" Class="mt-3"
                                  @bind-Value="model.Email" For="@(() => model.Email)"/>
                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </MudGrid>
</MudContainer>

@code {
    RegisterAccountForm model = new RegisterAccountForm();
    bool success;

    public class RegisterAccountForm
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 4 characters long.", MinimumLength = 4)]
        public string Password { get; set; }
    }

    private async Task OnValidSubmit(EditContext context)
    {
        success = true;
        await _loginAuthFeature.Login(model.Email, model.Password);

        if (_authenticationState.IsAuthenticated)
        {
            _navigationManager.NavigateTo("");
        }
        StateHasChanged();
    }

}





@* @code { *@
@*     bool _loading; *@
@*     string _email = ""; *@
@*     string _password = ""; *@
@* *@
@*     async Task LoginClicker() *@
@*     { *@
@*         _loading = true; *@
@* *@
@*     // Animation delay *@
@*         await Task.Delay(1); *@
@* *@
@*         await _loginAuthFeature.Login(_email, _password); *@
@* *@
@*         if (_authenticationState.IsAuthenticated) *@
@*         { *@
@*             _navigationManager.NavigateTo(""); *@
@*         } *@
@* *@
@*         _loading = false; *@
@*     } *@
@* *@
@* } *@